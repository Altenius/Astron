Nonterminals useless in grammar

   array


Rules useless in grammar

  154 array: empty
  155      | array_value


Grammar

    0 $accept: grammar $end

    1 grammar: START_DC dc

    2 dc: empty
    3   | dc ';'
    4   | dc dclass_or_struct
    5   | dc import
    6   | dc typedef_decl
    7   | dc keyword_decl

    8 import: KW_IMPORT import_identifier

    9 $@1: /* empty */

   10 import: KW_FROM import_identifier KW_IMPORT $@1 import_symbol_list_or_star

   11 import_identifier: import_path
   12                  | import_identifier '.' import_path

   13 import_path: IDENTIFIER
   14            | import_path '/' IDENTIFIER

   15 import_symbol_list_or_star: import_symbol_list
   16                           | '*'

   17 import_symbol_list: import_path
   18                   | import_symbol_list ',' import_path

   19 typedef_decl: KW_TYPEDEF parameter

   20 keyword_decl: KW_KEYWORD keyword_decl_list

   21 keyword_decl_list: empty
   22                  | keyword_decl_list IDENTIFIER
   23                  | keyword_decl_list KEYWORD

   24 dclass_or_struct: dclass
   25                 | struct

   26 @2: /* empty */

   27 dclass: KW_DCLASS IDENTIFIER @2 dclass_derivation '{' dclass_fields '}'

   28 dclass_name: IDENTIFIER

   29 dclass_derivation: empty
   30                  | ':' dclass_base_list

   31 dclass_base_list: dclass_name
   32                 | dclass_base_list ',' dclass_name

   33 dclass_fields: empty
   34              | dclass_fields ';'
   35              | dclass_fields dclass_field ';'

   36 dclass_field: atomic_field keyword_list
   37             | molecular_field no_keyword_list
   38             | unnamed_parameter keyword_list
   39             | named_parameter keyword_list

   40 @3: /* empty */

   41 struct: KW_STRUCT IDENTIFIER @3 struct_derivation '{' struct_fields '}'

   42 struct_name: IDENTIFIER

   43 struct_derivation: empty
   44                  | ':' struct_base_list

   45 struct_base_list: struct_name
   46                 | struct_base_list ',' struct_name

   47 struct_fields: empty
   48              | struct_fields ';'
   49              | struct_fields struct_field ';'

   50 struct_field: atomic_field no_keyword_list
   51             | molecular_field no_keyword_list
   52             | unnamed_parameter no_keyword_list
   53             | named_parameter no_keyword_list

   54 @4: /* empty */

   55 atomic_field: IDENTIFIER '(' @4 parameter_list ')'

   56 parameter_list: empty
   57               | nonempty_parameter_list

   58 nonempty_parameter_list: atomic_element
   59                        | nonempty_parameter_list ',' atomic_element

   60 atomic_element: parameter

   61 named_parameter: param_w_nam
   62                | param_n_arr
   63                | param_n_def

   64 unnamed_parameter: param_w_typ
   65                  | param_w_rng
   66                  | param_w_mod
   67                  | param_w_div
   68                  | param_u_arr
   69                  | param_u_def

   70 parameter: named_parameter
   71          | unnamed_parameter

   72 param_w_typ: type_token
   73            | IDENTIFIER

   74 param_w_rng: type_token '(' double_range ')'

   75 param_w_mod: param_w_typ '%' number
   76            | param_w_rng '%' number

   77 param_w_div: param_w_typ '/' small_unsigned_integer
   78            | param_w_rng '/' small_unsigned_integer
   79            | param_w_mod '/' small_unsigned_integer

   80 param_w_nam: param_w_typ IDENTIFIER
   81            | param_w_rng IDENTIFIER
   82            | param_w_mod IDENTIFIER
   83            | param_w_div IDENTIFIER

   84 param_u_arr: param_w_typ '[' uint_range ']'
   85            | param_w_rng '[' uint_range ']'
   86            | param_w_mod '[' uint_range ']'
   87            | param_w_div '[' uint_range ']'

   88 param_n_arr: param_w_nam '[' uint_range ']'

   89 param_u_def: param_w_typ '=' parameter_value
   90            | param_w_rng '=' parameter_value
   91            | param_w_mod '=' parameter_value
   92            | param_w_div '=' parameter_value
   93            | param_u_arr '=' parameter_value

   94 param_n_def: param_w_nam '=' parameter_value
   95            | param_n_arr '=' parameter_value

   96 double_range: empty
   97             | char_or_number
   98             | char_or_number '-' char_or_number
   99             | char_or_number number
  100             | double_range ',' char_or_number
  101             | double_range ',' char_or_number '-' char_or_number
  102             | double_range ',' char_or_number number

  103 uint_range: empty
  104           | char_or_uint
  105           | char_or_uint '-' char_or_uint
  106           | char_or_uint small_negative_integer
  107           | uint_range ',' char_or_uint
  108           | uint_range ',' char_or_uint '-' char_or_uint
  109           | uint_range ',' char_or_uint small_negative_integer

  110 char_or_uint: STRING
  111             | small_unsigned_integer

  112 small_unsigned_integer: UNSIGNED_INTEGER

  113 small_negative_integer: SIGNED_INTEGER

  114 number: UNSIGNED_INTEGER
  115       | SIGNED_INTEGER
  116       | REAL

  117 char_or_number: STRING
  118               | number

  119 parameter_value: SIGNED_INTEGER
  120                | UNSIGNED_INTEGER
  121                | REAL
  122                | STRING
  123                | HEX_STRING
  124                | '[' array_value ']'
  125                | '{' array_value '}'

  126 array_value: parameter_value
  127            | SIGNED_INTEGER '*' small_unsigned_integer
  128            | UNSIGNED_INTEGER '*' small_unsigned_integer
  129            | REAL '*' small_unsigned_integer
  130            | HEX_STRING '*' small_unsigned_integer
  131            | array_value ',' parameter_value

  132 type_token: KW_INT8
  133           | KW_INT16
  134           | KW_INT32
  135           | KW_INT64
  136           | KW_UINT8
  137           | KW_UINT16
  138           | KW_UINT32
  139           | KW_UINT64
  140           | KW_FLOAT32
  141           | KW_FLOAT64
  142           | KW_STRING
  143           | KW_BLOB
  144           | KW_CHAR

  145 keyword_list: empty
  146             | keyword_list KEYWORD

  147 no_keyword_list: keyword_list

  148 $@5: /* empty */

  149 molecular_field: IDENTIFIER ':' $@5 molecular_atom_list

  150 atomic_name: IDENTIFIER

  151 molecular_atom_list: atomic_name
  152                    | molecular_atom_list ',' atomic_name

  153 empty: /* empty */


Terminals, with rules where they appear

$end (0) 0
'%' (37) 75 76
'(' (40) 55 74
')' (41) 55 74
'*' (42) 16 127 128 129 130
',' (44) 18 32 46 59 100 101 102 107 108 109 131 152
'-' (45) 98 101 105 108
'.' (46) 12
'/' (47) 14 77 78 79
':' (58) 30 44 149
';' (59) 3 34 35 48 49
'=' (61) 89 90 91 92 93 94 95
'[' (91) 84 85 86 87 88 124
']' (93) 84 85 86 87 88 124
'{' (123) 27 41 125
'}' (125) 27 41 125
error (256)
UNSIGNED_INTEGER (258) 112 114 120 128
SIGNED_INTEGER (259) 113 115 119 127
REAL (260) 116 121 129
STRING (261) 110 117 122
HEX_STRING (262) 123 130
IDENTIFIER (263) 13 14 22 27 28 41 42 55 73 80 81 82 83 149 150
KEYWORD (264) 23 146
START_DC (265) 1
KW_DCLASS (266) 27
KW_STRUCT (267) 41
KW_FROM (268) 10
KW_IMPORT (269) 8 10
KW_TYPEDEF (270) 19
KW_KEYWORD (271) 20
KW_INT8 (272) 132
KW_INT16 (273) 133
KW_INT32 (274) 134
KW_INT64 (275) 135
KW_UINT8 (276) 136
KW_UINT16 (277) 137
KW_UINT32 (278) 138
KW_UINT64 (279) 139
KW_FLOAT32 (280) 140
KW_FLOAT64 (281) 141
KW_STRING (282) 142
KW_BLOB (283) 143
KW_CHAR (284) 144


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
grammar (46)
    on left: 1, on right: 0
dc (47)
    on left: 2 3 4 5 6 7, on right: 1 3 4 5 6 7
import (48)
    on left: 8 10, on right: 5
$@1 (49)
    on left: 9, on right: 10
import_identifier (50)
    on left: 11 12, on right: 8 10 12
import_path (51)
    on left: 13 14, on right: 11 12 14 17 18
import_symbol_list_or_star (52)
    on left: 15 16, on right: 10
import_symbol_list (53)
    on left: 17 18, on right: 15 18
typedef_decl (54)
    on left: 19, on right: 6
keyword_decl (55)
    on left: 20, on right: 7
keyword_decl_list (56)
    on left: 21 22 23, on right: 20 22 23
dclass_or_struct (57)
    on left: 24 25, on right: 4
dclass (58)
    on left: 27, on right: 24
@2 (59)
    on left: 26, on right: 27
dclass_name (60)
    on left: 28, on right: 31 32
dclass_derivation (61)
    on left: 29 30, on right: 27
dclass_base_list (62)
    on left: 31 32, on right: 30 32
dclass_fields (63)
    on left: 33 34 35, on right: 27 34 35
dclass_field (64)
    on left: 36 37 38 39, on right: 35
struct (65)
    on left: 41, on right: 25
@3 (66)
    on left: 40, on right: 41
struct_name (67)
    on left: 42, on right: 45 46
struct_derivation (68)
    on left: 43 44, on right: 41
struct_base_list (69)
    on left: 45 46, on right: 44 46
struct_fields (70)
    on left: 47 48 49, on right: 41 48 49
struct_field (71)
    on left: 50 51 52 53, on right: 49
atomic_field (72)
    on left: 55, on right: 36 50
@4 (73)
    on left: 54, on right: 55
parameter_list (74)
    on left: 56 57, on right: 55
nonempty_parameter_list (75)
    on left: 58 59, on right: 57 59
atomic_element (76)
    on left: 60, on right: 58 59
named_parameter (77)
    on left: 61 62 63, on right: 39 53 70
unnamed_parameter (78)
    on left: 64 65 66 67 68 69, on right: 38 52 71
parameter (79)
    on left: 70 71, on right: 19 60
param_w_typ (80)
    on left: 72 73, on right: 64 75 77 80 84 89
param_w_rng (81)
    on left: 74, on right: 65 76 78 81 85 90
param_w_mod (82)
    on left: 75 76, on right: 66 79 82 86 91
param_w_div (83)
    on left: 77 78 79, on right: 67 83 87 92
param_w_nam (84)
    on left: 80 81 82 83, on right: 61 88 94
param_u_arr (85)
    on left: 84 85 86 87, on right: 68 93
param_n_arr (86)
    on left: 88, on right: 62 95
param_u_def (87)
    on left: 89 90 91 92 93, on right: 69
param_n_def (88)
    on left: 94 95, on right: 63
double_range (89)
    on left: 96 97 98 99 100 101 102, on right: 74 100 101 102
uint_range (90)
    on left: 103 104 105 106 107 108 109, on right: 84 85 86 87 88
    107 108 109
char_or_uint (91)
    on left: 110 111, on right: 104 105 106 107 108 109
small_unsigned_integer (92)
    on left: 112, on right: 77 78 79 111 127 128 129 130
small_negative_integer (93)
    on left: 113, on right: 106 109
number (94)
    on left: 114 115 116, on right: 75 76 99 102 118
char_or_number (95)
    on left: 117 118, on right: 97 98 99 100 101 102
parameter_value (96)
    on left: 119 120 121 122 123 124 125, on right: 89 90 91 92 93
    94 95 126 131
array_value (97)
    on left: 126 127 128 129 130 131, on right: 124 125 131
type_token (98)
    on left: 132 133 134 135 136 137 138 139 140 141 142 143 144, on right:
    72 74
keyword_list (99)
    on left: 145 146, on right: 36 38 39 146 147
no_keyword_list (100)
    on left: 147, on right: 37 50 51 52 53
molecular_field (101)
    on left: 149, on right: 37 51
$@5 (102)
    on left: 148, on right: 149
atomic_name (103)
    on left: 150, on right: 151 152
molecular_atom_list (104)
    on left: 151 152, on right: 149 152
empty (105)
    on left: 153, on right: 2 21 29 33 43 47 56 96 103 145


State 0

    0 $accept: . grammar $end

    START_DC  shift, and go to state 1

    grammar  go to state 2


State 1

    1 grammar: START_DC . dc

    $default  reduce using rule 153 (empty)

    dc     go to state 3
    empty  go to state 4


State 2

    0 $accept: grammar . $end

    $end  shift, and go to state 5


State 3

    1 grammar: START_DC dc .
    3 dc: dc . ';'
    4   | dc . dclass_or_struct
    5   | dc . import
    6   | dc . typedef_decl
    7   | dc . keyword_decl

    KW_DCLASS   shift, and go to state 6
    KW_STRUCT   shift, and go to state 7
    KW_FROM     shift, and go to state 8
    KW_IMPORT   shift, and go to state 9
    KW_TYPEDEF  shift, and go to state 10
    KW_KEYWORD  shift, and go to state 11
    ';'         shift, and go to state 12

    $default  reduce using rule 1 (grammar)

    import            go to state 13
    typedef_decl      go to state 14
    keyword_decl      go to state 15
    dclass_or_struct  go to state 16
    dclass            go to state 17
    struct            go to state 18


State 4

    2 dc: empty .

    $default  reduce using rule 2 (dc)


State 5

    0 $accept: grammar $end .

    $default  accept


State 6

   27 dclass: KW_DCLASS . IDENTIFIER @2 dclass_derivation '{' dclass_fields '}'

    IDENTIFIER  shift, and go to state 19


State 7

   41 struct: KW_STRUCT . IDENTIFIER @3 struct_derivation '{' struct_fields '}'

    IDENTIFIER  shift, and go to state 20


State 8

   10 import: KW_FROM . import_identifier KW_IMPORT $@1 import_symbol_list_or_star

    IDENTIFIER  shift, and go to state 21

    import_identifier  go to state 22
    import_path        go to state 23


State 9

    8 import: KW_IMPORT . import_identifier

    IDENTIFIER  shift, and go to state 21

    import_identifier  go to state 24
    import_path        go to state 23


State 10

   19 typedef_decl: KW_TYPEDEF . parameter

    IDENTIFIER  shift, and go to state 25
    KW_INT8     shift, and go to state 26
    KW_INT16    shift, and go to state 27
    KW_INT32    shift, and go to state 28
    KW_INT64    shift, and go to state 29
    KW_UINT8    shift, and go to state 30
    KW_UINT16   shift, and go to state 31
    KW_UINT32   shift, and go to state 32
    KW_UINT64   shift, and go to state 33
    KW_FLOAT32  shift, and go to state 34
    KW_FLOAT64  shift, and go to state 35
    KW_STRING   shift, and go to state 36
    KW_BLOB     shift, and go to state 37
    KW_CHAR     shift, and go to state 38

    named_parameter    go to state 39
    unnamed_parameter  go to state 40
    parameter          go to state 41
    param_w_typ        go to state 42
    param_w_rng        go to state 43
    param_w_mod        go to state 44
    param_w_div        go to state 45
    param_w_nam        go to state 46
    param_u_arr        go to state 47
    param_n_arr        go to state 48
    param_u_def        go to state 49
    param_n_def        go to state 50
    type_token         go to state 51


State 11

   20 keyword_decl: KW_KEYWORD . keyword_decl_list

    $default  reduce using rule 153 (empty)

    keyword_decl_list  go to state 52
    empty              go to state 53


State 12

    3 dc: dc ';' .

    $default  reduce using rule 3 (dc)


State 13

    5 dc: dc import .

    $default  reduce using rule 5 (dc)


State 14

    6 dc: dc typedef_decl .

    $default  reduce using rule 6 (dc)


State 15

    7 dc: dc keyword_decl .

    $default  reduce using rule 7 (dc)


State 16

    4 dc: dc dclass_or_struct .

    $default  reduce using rule 4 (dc)


State 17

   24 dclass_or_struct: dclass .

    $default  reduce using rule 24 (dclass_or_struct)


State 18

   25 dclass_or_struct: struct .

    $default  reduce using rule 25 (dclass_or_struct)


State 19

   27 dclass: KW_DCLASS IDENTIFIER . @2 dclass_derivation '{' dclass_fields '}'

    $default  reduce using rule 26 (@2)

    @2  go to state 54


State 20

   41 struct: KW_STRUCT IDENTIFIER . @3 struct_derivation '{' struct_fields '}'

    $default  reduce using rule 40 (@3)

    @3  go to state 55


State 21

   13 import_path: IDENTIFIER .

    $default  reduce using rule 13 (import_path)


State 22

   10 import: KW_FROM import_identifier . KW_IMPORT $@1 import_symbol_list_or_star
   12 import_identifier: import_identifier . '.' import_path

    KW_IMPORT  shift, and go to state 56
    '.'        shift, and go to state 57


State 23

   11 import_identifier: import_path .
   14 import_path: import_path . '/' IDENTIFIER

    '/'  shift, and go to state 58

    $default  reduce using rule 11 (import_identifier)


State 24

    8 import: KW_IMPORT import_identifier .
   12 import_identifier: import_identifier . '.' import_path

    '.'  shift, and go to state 57

    $default  reduce using rule 8 (import)


State 25

   73 param_w_typ: IDENTIFIER .

    $default  reduce using rule 73 (param_w_typ)


State 26

  132 type_token: KW_INT8 .

    $default  reduce using rule 132 (type_token)


State 27

  133 type_token: KW_INT16 .

    $default  reduce using rule 133 (type_token)


State 28

  134 type_token: KW_INT32 .

    $default  reduce using rule 134 (type_token)


State 29

  135 type_token: KW_INT64 .

    $default  reduce using rule 135 (type_token)


State 30

  136 type_token: KW_UINT8 .

    $default  reduce using rule 136 (type_token)


State 31

  137 type_token: KW_UINT16 .

    $default  reduce using rule 137 (type_token)


State 32

  138 type_token: KW_UINT32 .

    $default  reduce using rule 138 (type_token)


State 33

  139 type_token: KW_UINT64 .

    $default  reduce using rule 139 (type_token)


State 34

  140 type_token: KW_FLOAT32 .

    $default  reduce using rule 140 (type_token)


State 35

  141 type_token: KW_FLOAT64 .

    $default  reduce using rule 141 (type_token)


State 36

  142 type_token: KW_STRING .

    $default  reduce using rule 142 (type_token)


State 37

  143 type_token: KW_BLOB .

    $default  reduce using rule 143 (type_token)


State 38

  144 type_token: KW_CHAR .

    $default  reduce using rule 144 (type_token)


State 39

   70 parameter: named_parameter .

    $default  reduce using rule 70 (parameter)


State 40

   71 parameter: unnamed_parameter .

    $default  reduce using rule 71 (parameter)


State 41

   19 typedef_decl: KW_TYPEDEF parameter .

    $default  reduce using rule 19 (typedef_decl)


State 42

   64 unnamed_parameter: param_w_typ .
   75 param_w_mod: param_w_typ . '%' number
   77 param_w_div: param_w_typ . '/' small_unsigned_integer
   80 param_w_nam: param_w_typ . IDENTIFIER
   84 param_u_arr: param_w_typ . '[' uint_range ']'
   89 param_u_def: param_w_typ . '=' parameter_value

    IDENTIFIER  shift, and go to state 59
    '/'         shift, and go to state 60
    '%'         shift, and go to state 61
    '['         shift, and go to state 62
    '='         shift, and go to state 63

    $default  reduce using rule 64 (unnamed_parameter)


State 43

   65 unnamed_parameter: param_w_rng .
   76 param_w_mod: param_w_rng . '%' number
   78 param_w_div: param_w_rng . '/' small_unsigned_integer
   81 param_w_nam: param_w_rng . IDENTIFIER
   85 param_u_arr: param_w_rng . '[' uint_range ']'
   90 param_u_def: param_w_rng . '=' parameter_value

    IDENTIFIER  shift, and go to state 64
    '/'         shift, and go to state 65
    '%'         shift, and go to state 66
    '['         shift, and go to state 67
    '='         shift, and go to state 68

    $default  reduce using rule 65 (unnamed_parameter)


State 44

   66 unnamed_parameter: param_w_mod .
   79 param_w_div: param_w_mod . '/' small_unsigned_integer
   82 param_w_nam: param_w_mod . IDENTIFIER
   86 param_u_arr: param_w_mod . '[' uint_range ']'
   91 param_u_def: param_w_mod . '=' parameter_value

    IDENTIFIER  shift, and go to state 69
    '/'         shift, and go to state 70
    '['         shift, and go to state 71
    '='         shift, and go to state 72

    $default  reduce using rule 66 (unnamed_parameter)


State 45

   67 unnamed_parameter: param_w_div .
   83 param_w_nam: param_w_div . IDENTIFIER
   87 param_u_arr: param_w_div . '[' uint_range ']'
   92 param_u_def: param_w_div . '=' parameter_value

    IDENTIFIER  shift, and go to state 73
    '['         shift, and go to state 74
    '='         shift, and go to state 75

    $default  reduce using rule 67 (unnamed_parameter)


State 46

   61 named_parameter: param_w_nam .
   88 param_n_arr: param_w_nam . '[' uint_range ']'
   94 param_n_def: param_w_nam . '=' parameter_value

    '['  shift, and go to state 76
    '='  shift, and go to state 77

    $default  reduce using rule 61 (named_parameter)


State 47

   68 unnamed_parameter: param_u_arr .
   93 param_u_def: param_u_arr . '=' parameter_value

    '='  shift, and go to state 78

    $default  reduce using rule 68 (unnamed_parameter)


State 48

   62 named_parameter: param_n_arr .
   95 param_n_def: param_n_arr . '=' parameter_value

    '='  shift, and go to state 79

    $default  reduce using rule 62 (named_parameter)


State 49

   69 unnamed_parameter: param_u_def .

    $default  reduce using rule 69 (unnamed_parameter)


State 50

   63 named_parameter: param_n_def .

    $default  reduce using rule 63 (named_parameter)


State 51

   72 param_w_typ: type_token .
   74 param_w_rng: type_token . '(' double_range ')'

    '('  shift, and go to state 80

    $default  reduce using rule 72 (param_w_typ)


State 52

   20 keyword_decl: KW_KEYWORD keyword_decl_list .
   22 keyword_decl_list: keyword_decl_list . IDENTIFIER
   23                  | keyword_decl_list . KEYWORD

    IDENTIFIER  shift, and go to state 81
    KEYWORD     shift, and go to state 82

    $default  reduce using rule 20 (keyword_decl)


State 53

   21 keyword_decl_list: empty .

    $default  reduce using rule 21 (keyword_decl_list)


State 54

   27 dclass: KW_DCLASS IDENTIFIER @2 . dclass_derivation '{' dclass_fields '}'

    ':'  shift, and go to state 83

    $default  reduce using rule 153 (empty)

    dclass_derivation  go to state 84
    empty              go to state 85


State 55

   41 struct: KW_STRUCT IDENTIFIER @3 . struct_derivation '{' struct_fields '}'

    ':'  shift, and go to state 86

    $default  reduce using rule 153 (empty)

    struct_derivation  go to state 87
    empty              go to state 88


State 56

   10 import: KW_FROM import_identifier KW_IMPORT . $@1 import_symbol_list_or_star

    $default  reduce using rule 9 ($@1)

    $@1  go to state 89


State 57

   12 import_identifier: import_identifier '.' . import_path

    IDENTIFIER  shift, and go to state 21

    import_path  go to state 90


State 58

   14 import_path: import_path '/' . IDENTIFIER

    IDENTIFIER  shift, and go to state 91


State 59

   80 param_w_nam: param_w_typ IDENTIFIER .

    $default  reduce using rule 80 (param_w_nam)


State 60

   77 param_w_div: param_w_typ '/' . small_unsigned_integer

    UNSIGNED_INTEGER  shift, and go to state 92

    small_unsigned_integer  go to state 93


State 61

   75 param_w_mod: param_w_typ '%' . number

    UNSIGNED_INTEGER  shift, and go to state 94
    SIGNED_INTEGER    shift, and go to state 95
    REAL              shift, and go to state 96

    number  go to state 97


State 62

   84 param_u_arr: param_w_typ '[' . uint_range ']'

    UNSIGNED_INTEGER  shift, and go to state 92
    STRING            shift, and go to state 98

    $default  reduce using rule 153 (empty)

    uint_range              go to state 99
    char_or_uint            go to state 100
    small_unsigned_integer  go to state 101
    empty                   go to state 102


State 63

   89 param_u_def: param_w_typ '=' . parameter_value

    UNSIGNED_INTEGER  shift, and go to state 103
    SIGNED_INTEGER    shift, and go to state 104
    REAL              shift, and go to state 105
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 107
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 110


State 64

   81 param_w_nam: param_w_rng IDENTIFIER .

    $default  reduce using rule 81 (param_w_nam)


State 65

   78 param_w_div: param_w_rng '/' . small_unsigned_integer

    UNSIGNED_INTEGER  shift, and go to state 92

    small_unsigned_integer  go to state 111


State 66

   76 param_w_mod: param_w_rng '%' . number

    UNSIGNED_INTEGER  shift, and go to state 94
    SIGNED_INTEGER    shift, and go to state 95
    REAL              shift, and go to state 96

    number  go to state 112


State 67

   85 param_u_arr: param_w_rng '[' . uint_range ']'

    UNSIGNED_INTEGER  shift, and go to state 92
    STRING            shift, and go to state 98

    $default  reduce using rule 153 (empty)

    uint_range              go to state 113
    char_or_uint            go to state 100
    small_unsigned_integer  go to state 101
    empty                   go to state 102


State 68

   90 param_u_def: param_w_rng '=' . parameter_value

    UNSIGNED_INTEGER  shift, and go to state 103
    SIGNED_INTEGER    shift, and go to state 104
    REAL              shift, and go to state 105
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 107
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 114


State 69

   82 param_w_nam: param_w_mod IDENTIFIER .

    $default  reduce using rule 82 (param_w_nam)


State 70

   79 param_w_div: param_w_mod '/' . small_unsigned_integer

    UNSIGNED_INTEGER  shift, and go to state 92

    small_unsigned_integer  go to state 115


State 71

   86 param_u_arr: param_w_mod '[' . uint_range ']'

    UNSIGNED_INTEGER  shift, and go to state 92
    STRING            shift, and go to state 98

    $default  reduce using rule 153 (empty)

    uint_range              go to state 116
    char_or_uint            go to state 100
    small_unsigned_integer  go to state 101
    empty                   go to state 102


State 72

   91 param_u_def: param_w_mod '=' . parameter_value

    UNSIGNED_INTEGER  shift, and go to state 103
    SIGNED_INTEGER    shift, and go to state 104
    REAL              shift, and go to state 105
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 107
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 117


State 73

   83 param_w_nam: param_w_div IDENTIFIER .

    $default  reduce using rule 83 (param_w_nam)


State 74

   87 param_u_arr: param_w_div '[' . uint_range ']'

    UNSIGNED_INTEGER  shift, and go to state 92
    STRING            shift, and go to state 98

    $default  reduce using rule 153 (empty)

    uint_range              go to state 118
    char_or_uint            go to state 100
    small_unsigned_integer  go to state 101
    empty                   go to state 102


State 75

   92 param_u_def: param_w_div '=' . parameter_value

    UNSIGNED_INTEGER  shift, and go to state 103
    SIGNED_INTEGER    shift, and go to state 104
    REAL              shift, and go to state 105
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 107
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 119


State 76

   88 param_n_arr: param_w_nam '[' . uint_range ']'

    UNSIGNED_INTEGER  shift, and go to state 92
    STRING            shift, and go to state 98

    $default  reduce using rule 153 (empty)

    uint_range              go to state 120
    char_or_uint            go to state 100
    small_unsigned_integer  go to state 101
    empty                   go to state 102


State 77

   94 param_n_def: param_w_nam '=' . parameter_value

    UNSIGNED_INTEGER  shift, and go to state 103
    SIGNED_INTEGER    shift, and go to state 104
    REAL              shift, and go to state 105
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 107
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 121


State 78

   93 param_u_def: param_u_arr '=' . parameter_value

    UNSIGNED_INTEGER  shift, and go to state 103
    SIGNED_INTEGER    shift, and go to state 104
    REAL              shift, and go to state 105
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 107
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 122


State 79

   95 param_n_def: param_n_arr '=' . parameter_value

    UNSIGNED_INTEGER  shift, and go to state 103
    SIGNED_INTEGER    shift, and go to state 104
    REAL              shift, and go to state 105
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 107
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 123


State 80

   74 param_w_rng: type_token '(' . double_range ')'

    UNSIGNED_INTEGER  shift, and go to state 94
    SIGNED_INTEGER    shift, and go to state 95
    REAL              shift, and go to state 96
    STRING            shift, and go to state 124

    $default  reduce using rule 153 (empty)

    double_range    go to state 125
    number          go to state 126
    char_or_number  go to state 127
    empty           go to state 128


State 81

   22 keyword_decl_list: keyword_decl_list IDENTIFIER .

    $default  reduce using rule 22 (keyword_decl_list)


State 82

   23 keyword_decl_list: keyword_decl_list KEYWORD .

    $default  reduce using rule 23 (keyword_decl_list)


State 83

   30 dclass_derivation: ':' . dclass_base_list

    IDENTIFIER  shift, and go to state 129

    dclass_name       go to state 130
    dclass_base_list  go to state 131


State 84

   27 dclass: KW_DCLASS IDENTIFIER @2 dclass_derivation . '{' dclass_fields '}'

    '{'  shift, and go to state 132


State 85

   29 dclass_derivation: empty .

    $default  reduce using rule 29 (dclass_derivation)


State 86

   44 struct_derivation: ':' . struct_base_list

    IDENTIFIER  shift, and go to state 133

    struct_name       go to state 134
    struct_base_list  go to state 135


State 87

   41 struct: KW_STRUCT IDENTIFIER @3 struct_derivation . '{' struct_fields '}'

    '{'  shift, and go to state 136


State 88

   43 struct_derivation: empty .

    $default  reduce using rule 43 (struct_derivation)


State 89

   10 import: KW_FROM import_identifier KW_IMPORT $@1 . import_symbol_list_or_star

    IDENTIFIER  shift, and go to state 21
    '*'         shift, and go to state 137

    import_path                 go to state 138
    import_symbol_list_or_star  go to state 139
    import_symbol_list          go to state 140


State 90

   12 import_identifier: import_identifier '.' import_path .
   14 import_path: import_path . '/' IDENTIFIER

    '/'  shift, and go to state 58

    $default  reduce using rule 12 (import_identifier)


State 91

   14 import_path: import_path '/' IDENTIFIER .

    $default  reduce using rule 14 (import_path)


State 92

  112 small_unsigned_integer: UNSIGNED_INTEGER .

    $default  reduce using rule 112 (small_unsigned_integer)


State 93

   77 param_w_div: param_w_typ '/' small_unsigned_integer .

    $default  reduce using rule 77 (param_w_div)


State 94

  114 number: UNSIGNED_INTEGER .

    $default  reduce using rule 114 (number)


State 95

  115 number: SIGNED_INTEGER .

    $default  reduce using rule 115 (number)


State 96

  116 number: REAL .

    $default  reduce using rule 116 (number)


State 97

   75 param_w_mod: param_w_typ '%' number .

    $default  reduce using rule 75 (param_w_mod)


State 98

  110 char_or_uint: STRING .

    $default  reduce using rule 110 (char_or_uint)


State 99

   84 param_u_arr: param_w_typ '[' uint_range . ']'
  107 uint_range: uint_range . ',' char_or_uint
  108           | uint_range . ',' char_or_uint '-' char_or_uint
  109           | uint_range . ',' char_or_uint small_negative_integer

    ','  shift, and go to state 141
    ']'  shift, and go to state 142


State 100

  104 uint_range: char_or_uint .
  105           | char_or_uint . '-' char_or_uint
  106           | char_or_uint . small_negative_integer

    SIGNED_INTEGER  shift, and go to state 143
    '-'             shift, and go to state 144

    $default  reduce using rule 104 (uint_range)

    small_negative_integer  go to state 145


State 101

  111 char_or_uint: small_unsigned_integer .

    $default  reduce using rule 111 (char_or_uint)


State 102

  103 uint_range: empty .

    $default  reduce using rule 103 (uint_range)


State 103

  120 parameter_value: UNSIGNED_INTEGER .

    $default  reduce using rule 120 (parameter_value)


State 104

  119 parameter_value: SIGNED_INTEGER .

    $default  reduce using rule 119 (parameter_value)


State 105

  121 parameter_value: REAL .

    $default  reduce using rule 121 (parameter_value)


State 106

  122 parameter_value: STRING .

    $default  reduce using rule 122 (parameter_value)


State 107

  123 parameter_value: HEX_STRING .

    $default  reduce using rule 123 (parameter_value)


State 108

  125 parameter_value: '{' . array_value '}'

    UNSIGNED_INTEGER  shift, and go to state 146
    SIGNED_INTEGER    shift, and go to state 147
    REAL              shift, and go to state 148
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 149
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 150
    array_value      go to state 151


State 109

  124 parameter_value: '[' . array_value ']'

    UNSIGNED_INTEGER  shift, and go to state 146
    SIGNED_INTEGER    shift, and go to state 147
    REAL              shift, and go to state 148
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 149
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 150
    array_value      go to state 152


State 110

   89 param_u_def: param_w_typ '=' parameter_value .

    $default  reduce using rule 89 (param_u_def)


State 111

   78 param_w_div: param_w_rng '/' small_unsigned_integer .

    $default  reduce using rule 78 (param_w_div)


State 112

   76 param_w_mod: param_w_rng '%' number .

    $default  reduce using rule 76 (param_w_mod)


State 113

   85 param_u_arr: param_w_rng '[' uint_range . ']'
  107 uint_range: uint_range . ',' char_or_uint
  108           | uint_range . ',' char_or_uint '-' char_or_uint
  109           | uint_range . ',' char_or_uint small_negative_integer

    ','  shift, and go to state 141
    ']'  shift, and go to state 153


State 114

   90 param_u_def: param_w_rng '=' parameter_value .

    $default  reduce using rule 90 (param_u_def)


State 115

   79 param_w_div: param_w_mod '/' small_unsigned_integer .

    $default  reduce using rule 79 (param_w_div)


State 116

   86 param_u_arr: param_w_mod '[' uint_range . ']'
  107 uint_range: uint_range . ',' char_or_uint
  108           | uint_range . ',' char_or_uint '-' char_or_uint
  109           | uint_range . ',' char_or_uint small_negative_integer

    ','  shift, and go to state 141
    ']'  shift, and go to state 154


State 117

   91 param_u_def: param_w_mod '=' parameter_value .

    $default  reduce using rule 91 (param_u_def)


State 118

   87 param_u_arr: param_w_div '[' uint_range . ']'
  107 uint_range: uint_range . ',' char_or_uint
  108           | uint_range . ',' char_or_uint '-' char_or_uint
  109           | uint_range . ',' char_or_uint small_negative_integer

    ','  shift, and go to state 141
    ']'  shift, and go to state 155


State 119

   92 param_u_def: param_w_div '=' parameter_value .

    $default  reduce using rule 92 (param_u_def)


State 120

   88 param_n_arr: param_w_nam '[' uint_range . ']'
  107 uint_range: uint_range . ',' char_or_uint
  108           | uint_range . ',' char_or_uint '-' char_or_uint
  109           | uint_range . ',' char_or_uint small_negative_integer

    ','  shift, and go to state 141
    ']'  shift, and go to state 156


State 121

   94 param_n_def: param_w_nam '=' parameter_value .

    $default  reduce using rule 94 (param_n_def)


State 122

   93 param_u_def: param_u_arr '=' parameter_value .

    $default  reduce using rule 93 (param_u_def)


State 123

   95 param_n_def: param_n_arr '=' parameter_value .

    $default  reduce using rule 95 (param_n_def)


State 124

  117 char_or_number: STRING .

    $default  reduce using rule 117 (char_or_number)


State 125

   74 param_w_rng: type_token '(' double_range . ')'
  100 double_range: double_range . ',' char_or_number
  101             | double_range . ',' char_or_number '-' char_or_number
  102             | double_range . ',' char_or_number number

    ','  shift, and go to state 157
    ')'  shift, and go to state 158


State 126

  118 char_or_number: number .

    $default  reduce using rule 118 (char_or_number)


State 127

   97 double_range: char_or_number .
   98             | char_or_number . '-' char_or_number
   99             | char_or_number . number

    UNSIGNED_INTEGER  shift, and go to state 94
    SIGNED_INTEGER    shift, and go to state 95
    REAL              shift, and go to state 96
    '-'               shift, and go to state 159

    $default  reduce using rule 97 (double_range)

    number  go to state 160


State 128

   96 double_range: empty .

    $default  reduce using rule 96 (double_range)


State 129

   28 dclass_name: IDENTIFIER .

    $default  reduce using rule 28 (dclass_name)


State 130

   31 dclass_base_list: dclass_name .

    $default  reduce using rule 31 (dclass_base_list)


State 131

   30 dclass_derivation: ':' dclass_base_list .
   32 dclass_base_list: dclass_base_list . ',' dclass_name

    ','  shift, and go to state 161

    $default  reduce using rule 30 (dclass_derivation)


State 132

   27 dclass: KW_DCLASS IDENTIFIER @2 dclass_derivation '{' . dclass_fields '}'

    $default  reduce using rule 153 (empty)

    dclass_fields  go to state 162
    empty          go to state 163


State 133

   42 struct_name: IDENTIFIER .

    $default  reduce using rule 42 (struct_name)


State 134

   45 struct_base_list: struct_name .

    $default  reduce using rule 45 (struct_base_list)


State 135

   44 struct_derivation: ':' struct_base_list .
   46 struct_base_list: struct_base_list . ',' struct_name

    ','  shift, and go to state 164

    $default  reduce using rule 44 (struct_derivation)


State 136

   41 struct: KW_STRUCT IDENTIFIER @3 struct_derivation '{' . struct_fields '}'

    $default  reduce using rule 153 (empty)

    struct_fields  go to state 165
    empty          go to state 166


State 137

   16 import_symbol_list_or_star: '*' .

    $default  reduce using rule 16 (import_symbol_list_or_star)


State 138

   14 import_path: import_path . '/' IDENTIFIER
   17 import_symbol_list: import_path .

    '/'  shift, and go to state 58

    $default  reduce using rule 17 (import_symbol_list)


State 139

   10 import: KW_FROM import_identifier KW_IMPORT $@1 import_symbol_list_or_star .

    $default  reduce using rule 10 (import)


State 140

   15 import_symbol_list_or_star: import_symbol_list .
   18 import_symbol_list: import_symbol_list . ',' import_path

    ','  shift, and go to state 167

    $default  reduce using rule 15 (import_symbol_list_or_star)


State 141

  107 uint_range: uint_range ',' . char_or_uint
  108           | uint_range ',' . char_or_uint '-' char_or_uint
  109           | uint_range ',' . char_or_uint small_negative_integer

    UNSIGNED_INTEGER  shift, and go to state 92
    STRING            shift, and go to state 98

    char_or_uint            go to state 168
    small_unsigned_integer  go to state 101


State 142

   84 param_u_arr: param_w_typ '[' uint_range ']' .

    $default  reduce using rule 84 (param_u_arr)


State 143

  113 small_negative_integer: SIGNED_INTEGER .

    $default  reduce using rule 113 (small_negative_integer)


State 144

  105 uint_range: char_or_uint '-' . char_or_uint

    UNSIGNED_INTEGER  shift, and go to state 92
    STRING            shift, and go to state 98

    char_or_uint            go to state 169
    small_unsigned_integer  go to state 101


State 145

  106 uint_range: char_or_uint small_negative_integer .

    $default  reduce using rule 106 (uint_range)


State 146

  120 parameter_value: UNSIGNED_INTEGER .
  128 array_value: UNSIGNED_INTEGER . '*' small_unsigned_integer

    '*'  shift, and go to state 170

    $default  reduce using rule 120 (parameter_value)


State 147

  119 parameter_value: SIGNED_INTEGER .
  127 array_value: SIGNED_INTEGER . '*' small_unsigned_integer

    '*'  shift, and go to state 171

    $default  reduce using rule 119 (parameter_value)


State 148

  121 parameter_value: REAL .
  129 array_value: REAL . '*' small_unsigned_integer

    '*'  shift, and go to state 172

    $default  reduce using rule 121 (parameter_value)


State 149

  123 parameter_value: HEX_STRING .
  130 array_value: HEX_STRING . '*' small_unsigned_integer

    '*'  shift, and go to state 173

    $default  reduce using rule 123 (parameter_value)


State 150

  126 array_value: parameter_value .

    $default  reduce using rule 126 (array_value)


State 151

  125 parameter_value: '{' array_value . '}'
  131 array_value: array_value . ',' parameter_value

    ','  shift, and go to state 174
    '}'  shift, and go to state 175


State 152

  124 parameter_value: '[' array_value . ']'
  131 array_value: array_value . ',' parameter_value

    ','  shift, and go to state 174
    ']'  shift, and go to state 176


State 153

   85 param_u_arr: param_w_rng '[' uint_range ']' .

    $default  reduce using rule 85 (param_u_arr)


State 154

   86 param_u_arr: param_w_mod '[' uint_range ']' .

    $default  reduce using rule 86 (param_u_arr)


State 155

   87 param_u_arr: param_w_div '[' uint_range ']' .

    $default  reduce using rule 87 (param_u_arr)


State 156

   88 param_n_arr: param_w_nam '[' uint_range ']' .

    $default  reduce using rule 88 (param_n_arr)


State 157

  100 double_range: double_range ',' . char_or_number
  101             | double_range ',' . char_or_number '-' char_or_number
  102             | double_range ',' . char_or_number number

    UNSIGNED_INTEGER  shift, and go to state 94
    SIGNED_INTEGER    shift, and go to state 95
    REAL              shift, and go to state 96
    STRING            shift, and go to state 124

    number          go to state 126
    char_or_number  go to state 177


State 158

   74 param_w_rng: type_token '(' double_range ')' .

    $default  reduce using rule 74 (param_w_rng)


State 159

   98 double_range: char_or_number '-' . char_or_number

    UNSIGNED_INTEGER  shift, and go to state 94
    SIGNED_INTEGER    shift, and go to state 95
    REAL              shift, and go to state 96
    STRING            shift, and go to state 124

    number          go to state 126
    char_or_number  go to state 178


State 160

   99 double_range: char_or_number number .

    $default  reduce using rule 99 (double_range)


State 161

   32 dclass_base_list: dclass_base_list ',' . dclass_name

    IDENTIFIER  shift, and go to state 129

    dclass_name  go to state 179


State 162

   27 dclass: KW_DCLASS IDENTIFIER @2 dclass_derivation '{' dclass_fields . '}'
   34 dclass_fields: dclass_fields . ';'
   35              | dclass_fields . dclass_field ';'

    IDENTIFIER  shift, and go to state 180
    KW_INT8     shift, and go to state 26
    KW_INT16    shift, and go to state 27
    KW_INT32    shift, and go to state 28
    KW_INT64    shift, and go to state 29
    KW_UINT8    shift, and go to state 30
    KW_UINT16   shift, and go to state 31
    KW_UINT32   shift, and go to state 32
    KW_UINT64   shift, and go to state 33
    KW_FLOAT32  shift, and go to state 34
    KW_FLOAT64  shift, and go to state 35
    KW_STRING   shift, and go to state 36
    KW_BLOB     shift, and go to state 37
    KW_CHAR     shift, and go to state 38
    ';'         shift, and go to state 181
    '}'         shift, and go to state 182

    dclass_field       go to state 183
    atomic_field       go to state 184
    named_parameter    go to state 185
    unnamed_parameter  go to state 186
    param_w_typ        go to state 42
    param_w_rng        go to state 43
    param_w_mod        go to state 44
    param_w_div        go to state 45
    param_w_nam        go to state 46
    param_u_arr        go to state 47
    param_n_arr        go to state 48
    param_u_def        go to state 49
    param_n_def        go to state 50
    type_token         go to state 51
    molecular_field    go to state 187


State 163

   33 dclass_fields: empty .

    $default  reduce using rule 33 (dclass_fields)


State 164

   46 struct_base_list: struct_base_list ',' . struct_name

    IDENTIFIER  shift, and go to state 133

    struct_name  go to state 188


State 165

   41 struct: KW_STRUCT IDENTIFIER @3 struct_derivation '{' struct_fields . '}'
   48 struct_fields: struct_fields . ';'
   49              | struct_fields . struct_field ';'

    IDENTIFIER  shift, and go to state 180
    KW_INT8     shift, and go to state 26
    KW_INT16    shift, and go to state 27
    KW_INT32    shift, and go to state 28
    KW_INT64    shift, and go to state 29
    KW_UINT8    shift, and go to state 30
    KW_UINT16   shift, and go to state 31
    KW_UINT32   shift, and go to state 32
    KW_UINT64   shift, and go to state 33
    KW_FLOAT32  shift, and go to state 34
    KW_FLOAT64  shift, and go to state 35
    KW_STRING   shift, and go to state 36
    KW_BLOB     shift, and go to state 37
    KW_CHAR     shift, and go to state 38
    ';'         shift, and go to state 189
    '}'         shift, and go to state 190

    struct_field       go to state 191
    atomic_field       go to state 192
    named_parameter    go to state 193
    unnamed_parameter  go to state 194
    param_w_typ        go to state 42
    param_w_rng        go to state 43
    param_w_mod        go to state 44
    param_w_div        go to state 45
    param_w_nam        go to state 46
    param_u_arr        go to state 47
    param_n_arr        go to state 48
    param_u_def        go to state 49
    param_n_def        go to state 50
    type_token         go to state 51
    molecular_field    go to state 195


State 166

   47 struct_fields: empty .

    $default  reduce using rule 47 (struct_fields)


State 167

   18 import_symbol_list: import_symbol_list ',' . import_path

    IDENTIFIER  shift, and go to state 21

    import_path  go to state 196


State 168

  107 uint_range: uint_range ',' char_or_uint .
  108           | uint_range ',' char_or_uint . '-' char_or_uint
  109           | uint_range ',' char_or_uint . small_negative_integer

    SIGNED_INTEGER  shift, and go to state 143
    '-'             shift, and go to state 197

    $default  reduce using rule 107 (uint_range)

    small_negative_integer  go to state 198


State 169

  105 uint_range: char_or_uint '-' char_or_uint .

    $default  reduce using rule 105 (uint_range)


State 170

  128 array_value: UNSIGNED_INTEGER '*' . small_unsigned_integer

    UNSIGNED_INTEGER  shift, and go to state 92

    small_unsigned_integer  go to state 199


State 171

  127 array_value: SIGNED_INTEGER '*' . small_unsigned_integer

    UNSIGNED_INTEGER  shift, and go to state 92

    small_unsigned_integer  go to state 200


State 172

  129 array_value: REAL '*' . small_unsigned_integer

    UNSIGNED_INTEGER  shift, and go to state 92

    small_unsigned_integer  go to state 201


State 173

  130 array_value: HEX_STRING '*' . small_unsigned_integer

    UNSIGNED_INTEGER  shift, and go to state 92

    small_unsigned_integer  go to state 202


State 174

  131 array_value: array_value ',' . parameter_value

    UNSIGNED_INTEGER  shift, and go to state 103
    SIGNED_INTEGER    shift, and go to state 104
    REAL              shift, and go to state 105
    STRING            shift, and go to state 106
    HEX_STRING        shift, and go to state 107
    '{'               shift, and go to state 108
    '['               shift, and go to state 109

    parameter_value  go to state 203


State 175

  125 parameter_value: '{' array_value '}' .

    $default  reduce using rule 125 (parameter_value)


State 176

  124 parameter_value: '[' array_value ']' .

    $default  reduce using rule 124 (parameter_value)


State 177

  100 double_range: double_range ',' char_or_number .
  101             | double_range ',' char_or_number . '-' char_or_number
  102             | double_range ',' char_or_number . number

    UNSIGNED_INTEGER  shift, and go to state 94
    SIGNED_INTEGER    shift, and go to state 95
    REAL              shift, and go to state 96
    '-'               shift, and go to state 204

    $default  reduce using rule 100 (double_range)

    number  go to state 205


State 178

   98 double_range: char_or_number '-' char_or_number .

    $default  reduce using rule 98 (double_range)


State 179

   32 dclass_base_list: dclass_base_list ',' dclass_name .

    $default  reduce using rule 32 (dclass_base_list)


State 180

   55 atomic_field: IDENTIFIER . '(' @4 parameter_list ')'
   73 param_w_typ: IDENTIFIER .
  149 molecular_field: IDENTIFIER . ':' $@5 molecular_atom_list

    ':'  shift, and go to state 206
    '('  shift, and go to state 207

    $default  reduce using rule 73 (param_w_typ)


State 181

   34 dclass_fields: dclass_fields ';' .

    $default  reduce using rule 34 (dclass_fields)


State 182

   27 dclass: KW_DCLASS IDENTIFIER @2 dclass_derivation '{' dclass_fields '}' .

    $default  reduce using rule 27 (dclass)


State 183

   35 dclass_fields: dclass_fields dclass_field . ';'

    ';'  shift, and go to state 208


State 184

   36 dclass_field: atomic_field . keyword_list

    $default  reduce using rule 153 (empty)

    keyword_list  go to state 209
    empty         go to state 210


State 185

   39 dclass_field: named_parameter . keyword_list

    $default  reduce using rule 153 (empty)

    keyword_list  go to state 211
    empty         go to state 210


State 186

   38 dclass_field: unnamed_parameter . keyword_list

    $default  reduce using rule 153 (empty)

    keyword_list  go to state 212
    empty         go to state 210


State 187

   37 dclass_field: molecular_field . no_keyword_list

    $default  reduce using rule 153 (empty)

    keyword_list     go to state 213
    no_keyword_list  go to state 214
    empty            go to state 210


State 188

   46 struct_base_list: struct_base_list ',' struct_name .

    $default  reduce using rule 46 (struct_base_list)


State 189

   48 struct_fields: struct_fields ';' .

    $default  reduce using rule 48 (struct_fields)


State 190

   41 struct: KW_STRUCT IDENTIFIER @3 struct_derivation '{' struct_fields '}' .

    $default  reduce using rule 41 (struct)


State 191

   49 struct_fields: struct_fields struct_field . ';'

    ';'  shift, and go to state 215


State 192

   50 struct_field: atomic_field . no_keyword_list

    $default  reduce using rule 153 (empty)

    keyword_list     go to state 213
    no_keyword_list  go to state 216
    empty            go to state 210


State 193

   53 struct_field: named_parameter . no_keyword_list

    $default  reduce using rule 153 (empty)

    keyword_list     go to state 213
    no_keyword_list  go to state 217
    empty            go to state 210


State 194

   52 struct_field: unnamed_parameter . no_keyword_list

    $default  reduce using rule 153 (empty)

    keyword_list     go to state 213
    no_keyword_list  go to state 218
    empty            go to state 210


State 195

   51 struct_field: molecular_field . no_keyword_list

    $default  reduce using rule 153 (empty)

    keyword_list     go to state 213
    no_keyword_list  go to state 219
    empty            go to state 210


State 196

   14 import_path: import_path . '/' IDENTIFIER
   18 import_symbol_list: import_symbol_list ',' import_path .

    '/'  shift, and go to state 58

    $default  reduce using rule 18 (import_symbol_list)


State 197

  108 uint_range: uint_range ',' char_or_uint '-' . char_or_uint

    UNSIGNED_INTEGER  shift, and go to state 92
    STRING            shift, and go to state 98

    char_or_uint            go to state 220
    small_unsigned_integer  go to state 101


State 198

  109 uint_range: uint_range ',' char_or_uint small_negative_integer .

    $default  reduce using rule 109 (uint_range)


State 199

  128 array_value: UNSIGNED_INTEGER '*' small_unsigned_integer .

    $default  reduce using rule 128 (array_value)


State 200

  127 array_value: SIGNED_INTEGER '*' small_unsigned_integer .

    $default  reduce using rule 127 (array_value)


State 201

  129 array_value: REAL '*' small_unsigned_integer .

    $default  reduce using rule 129 (array_value)


State 202

  130 array_value: HEX_STRING '*' small_unsigned_integer .

    $default  reduce using rule 130 (array_value)


State 203

  131 array_value: array_value ',' parameter_value .

    $default  reduce using rule 131 (array_value)


State 204

  101 double_range: double_range ',' char_or_number '-' . char_or_number

    UNSIGNED_INTEGER  shift, and go to state 94
    SIGNED_INTEGER    shift, and go to state 95
    REAL              shift, and go to state 96
    STRING            shift, and go to state 124

    number          go to state 126
    char_or_number  go to state 221


State 205

  102 double_range: double_range ',' char_or_number number .

    $default  reduce using rule 102 (double_range)


State 206

  149 molecular_field: IDENTIFIER ':' . $@5 molecular_atom_list

    $default  reduce using rule 148 ($@5)

    $@5  go to state 222


State 207

   55 atomic_field: IDENTIFIER '(' . @4 parameter_list ')'

    $default  reduce using rule 54 (@4)

    @4  go to state 223


State 208

   35 dclass_fields: dclass_fields dclass_field ';' .

    $default  reduce using rule 35 (dclass_fields)


State 209

   36 dclass_field: atomic_field keyword_list .
  146 keyword_list: keyword_list . KEYWORD

    KEYWORD  shift, and go to state 224

    $default  reduce using rule 36 (dclass_field)


State 210

  145 keyword_list: empty .

    $default  reduce using rule 145 (keyword_list)


State 211

   39 dclass_field: named_parameter keyword_list .
  146 keyword_list: keyword_list . KEYWORD

    KEYWORD  shift, and go to state 224

    $default  reduce using rule 39 (dclass_field)


State 212

   38 dclass_field: unnamed_parameter keyword_list .
  146 keyword_list: keyword_list . KEYWORD

    KEYWORD  shift, and go to state 224

    $default  reduce using rule 38 (dclass_field)


State 213

  146 keyword_list: keyword_list . KEYWORD
  147 no_keyword_list: keyword_list .

    KEYWORD  shift, and go to state 224

    $default  reduce using rule 147 (no_keyword_list)


State 214

   37 dclass_field: molecular_field no_keyword_list .

    $default  reduce using rule 37 (dclass_field)


State 215

   49 struct_fields: struct_fields struct_field ';' .

    $default  reduce using rule 49 (struct_fields)


State 216

   50 struct_field: atomic_field no_keyword_list .

    $default  reduce using rule 50 (struct_field)


State 217

   53 struct_field: named_parameter no_keyword_list .

    $default  reduce using rule 53 (struct_field)


State 218

   52 struct_field: unnamed_parameter no_keyword_list .

    $default  reduce using rule 52 (struct_field)


State 219

   51 struct_field: molecular_field no_keyword_list .

    $default  reduce using rule 51 (struct_field)


State 220

  108 uint_range: uint_range ',' char_or_uint '-' char_or_uint .

    $default  reduce using rule 108 (uint_range)


State 221

  101 double_range: double_range ',' char_or_number '-' char_or_number .

    $default  reduce using rule 101 (double_range)


State 222

  149 molecular_field: IDENTIFIER ':' $@5 . molecular_atom_list

    IDENTIFIER  shift, and go to state 225

    atomic_name          go to state 226
    molecular_atom_list  go to state 227


State 223

   55 atomic_field: IDENTIFIER '(' @4 . parameter_list ')'

    IDENTIFIER  shift, and go to state 25
    KW_INT8     shift, and go to state 26
    KW_INT16    shift, and go to state 27
    KW_INT32    shift, and go to state 28
    KW_INT64    shift, and go to state 29
    KW_UINT8    shift, and go to state 30
    KW_UINT16   shift, and go to state 31
    KW_UINT32   shift, and go to state 32
    KW_UINT64   shift, and go to state 33
    KW_FLOAT32  shift, and go to state 34
    KW_FLOAT64  shift, and go to state 35
    KW_STRING   shift, and go to state 36
    KW_BLOB     shift, and go to state 37
    KW_CHAR     shift, and go to state 38

    $default  reduce using rule 153 (empty)

    parameter_list           go to state 228
    nonempty_parameter_list  go to state 229
    atomic_element           go to state 230
    named_parameter          go to state 39
    unnamed_parameter        go to state 40
    parameter                go to state 231
    param_w_typ              go to state 42
    param_w_rng              go to state 43
    param_w_mod              go to state 44
    param_w_div              go to state 45
    param_w_nam              go to state 46
    param_u_arr              go to state 47
    param_n_arr              go to state 48
    param_u_def              go to state 49
    param_n_def              go to state 50
    type_token               go to state 51
    empty                    go to state 232


State 224

  146 keyword_list: keyword_list KEYWORD .

    $default  reduce using rule 146 (keyword_list)


State 225

  150 atomic_name: IDENTIFIER .

    $default  reduce using rule 150 (atomic_name)


State 226

  151 molecular_atom_list: atomic_name .

    $default  reduce using rule 151 (molecular_atom_list)


State 227

  149 molecular_field: IDENTIFIER ':' $@5 molecular_atom_list .
  152 molecular_atom_list: molecular_atom_list . ',' atomic_name

    ','  shift, and go to state 233

    $default  reduce using rule 149 (molecular_field)


State 228

   55 atomic_field: IDENTIFIER '(' @4 parameter_list . ')'

    ')'  shift, and go to state 234


State 229

   57 parameter_list: nonempty_parameter_list .
   59 nonempty_parameter_list: nonempty_parameter_list . ',' atomic_element

    ','  shift, and go to state 235

    $default  reduce using rule 57 (parameter_list)


State 230

   58 nonempty_parameter_list: atomic_element .

    $default  reduce using rule 58 (nonempty_parameter_list)


State 231

   60 atomic_element: parameter .

    $default  reduce using rule 60 (atomic_element)


State 232

   56 parameter_list: empty .

    $default  reduce using rule 56 (parameter_list)


State 233

  152 molecular_atom_list: molecular_atom_list ',' . atomic_name

    IDENTIFIER  shift, and go to state 225

    atomic_name  go to state 236


State 234

   55 atomic_field: IDENTIFIER '(' @4 parameter_list ')' .

    $default  reduce using rule 55 (atomic_field)


State 235

   59 nonempty_parameter_list: nonempty_parameter_list ',' . atomic_element

    IDENTIFIER  shift, and go to state 25
    KW_INT8     shift, and go to state 26
    KW_INT16    shift, and go to state 27
    KW_INT32    shift, and go to state 28
    KW_INT64    shift, and go to state 29
    KW_UINT8    shift, and go to state 30
    KW_UINT16   shift, and go to state 31
    KW_UINT32   shift, and go to state 32
    KW_UINT64   shift, and go to state 33
    KW_FLOAT32  shift, and go to state 34
    KW_FLOAT64  shift, and go to state 35
    KW_STRING   shift, and go to state 36
    KW_BLOB     shift, and go to state 37
    KW_CHAR     shift, and go to state 38

    atomic_element     go to state 237
    named_parameter    go to state 39
    unnamed_parameter  go to state 40
    parameter          go to state 231
    param_w_typ        go to state 42
    param_w_rng        go to state 43
    param_w_mod        go to state 44
    param_w_div        go to state 45
    param_w_nam        go to state 46
    param_u_arr        go to state 47
    param_n_arr        go to state 48
    param_u_def        go to state 49
    param_n_def        go to state 50
    type_token         go to state 51


State 236

  152 molecular_atom_list: molecular_atom_list ',' atomic_name .

    $default  reduce using rule 152 (molecular_atom_list)


State 237

   59 nonempty_parameter_list: nonempty_parameter_list ',' atomic_element .

    $default  reduce using rule 59 (nonempty_parameter_list)
